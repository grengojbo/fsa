:tocdepth: 2

.. _signals:

Разработка FSAdmin
==================
./manage.py syncdb



./manage.py graph_models contact tariff gateway dialplan lcr server cdr directory base |dot -Tpng -o test.png



./manage.py startmigration appname --initial # новая

./manage.py convert_to_south appname # конвертируем
datamigration
./manage.py schemamigration appname new_tables --auto
./manage.py migrate appname 0001 --fake # говорит о том, что миграция выполнена и последующие миграции её трогать не будут.
./manage.py migrate --db-dry-run # для проверки
./manage.py migrate --list # список миграций 


./manage.py dumpdata --format=xml --indent=1 server.Server > server.xml
./manage.py dumpdata --format=json --indent=1 server.conf > ../../fsa/fsa/server/fixtures/server_conf.json
./manage.py dumpdata --format=json --indent=1 server.csvbase > ../../fsa/fsa/server/fixtures/csvbase.json
./manage.py dumpdata --format=json --indent=1 server.SipProfile > ../../fsa/fsa/server/fixtures/sipprofile.json
./manage.py dumpdata --format=json --indent=1 server.alias > alias.json
./manage.py dumpdata --format=json --indent=1 acl > acl.json
./manage.py dumpdata --format=json --indent=1 dialplan.extension > extension.json
./manage.py dumpdata --format=json --indent=1 dialplan.context > context.json
./manage.py dumpdata --format=xml --indent=1 numberplan > ../../fsa/fsa/numberplan/fixtures/testnp.xml
./manage.py dumpdata --format=json --indent=1 grappelli > ../../fsa/fsa/core/fixtures/fsa_grappelli.json
./manage.py dumpdata --format=json --indent=1 lcr > ../../fsa/fsa/lcr/fixtures/test_lcr.json


Добавте Синонимы для SIP профайлов если вы загрузили данные то уже есть некоторые синонимы по умолчанию
Добавить шлюзы
Насройте приложение Сервер
Настройте конфигурацию для CDR приложения
В плане набора добавте контексты


настройка 
что бы сделать русский по умолчанию в vars.xml добавить строку 
<X-PRE-PROCESS cmd="set" data="default_language=ru"/>

Для Ubuntu
В файле  /etc/default/freeswitch меняем false на true
FREESWITCH_ENABLED="true"


 sudo apt-get install unixodbc-dev libmyodbc
yum install unixODBC-devel mysql-connector-odbc

/usr/lib/odbc/libmyodbc.so

<param name="odbc-dsn" value="fsmysql:freeswitch:freeswitch"/>

acl.conf
cdr_csv.conf.xml
event_socket.conf.xml
sofia.conf.xml
xml_cdr.conf.xml

./manage.py dumpdata --format=xml --indent=1 web2sms > web2sms.xml
./manage.py dumpdata --format=xml --indent=1 core dialplan gateway server acl numberplan directory lcr > backup.xml
./manage.py loaddata ./backup.xml
 
http://127.0.0.1:8000/accounts/email/validation/ScLusfnGqzTGs8YWWMFhJaVKQPMqPegpQtMwrCaDBVbubJ6sbPKQb76QbvEkYwxXnFKscx/

setuptools-hg
http://code.google.com/p/django-renderform/  django-renderform

Удаляем следующие файлы
/conf/autoload_configs/acl.conf.xml
/conf/autoload_configs/event_socket.conf.xml
/conf/autoload_configs/local_stream.conf.xml
/conf/autoload_configs/limit.conf.xml

lua.conf.xml
spidermonkey.conf.xml
voicemail.conf.xml
fifo.conf.xml
cdr_csv.conf.xml
enum.conf.xml
python.conf.xml
java.conf.xml
perl.conf.xml
sofia.conf.xml
xml_cdr.conf.xml
post_load_modules.conf.xml

Профилирование 

wget http://launchpadlibrarian.net/41426942/python-profiler_2.6.5-0ubuntu1_all.deb
dpkg -i ./python-profiler_2.6.5-0ubuntu1_all.deb

Проверка отправляемой почты
===========================

В debug_settings.py раскоментируйте строки
#EMAIL_HOST = 'localhost'
#EMAIL_PORT = 1025

далее запскаем в терминале
python -m smtpd -n -c DebuggingServer localhost:1025

Локализация
===========

django-admin.py makemessages -l ru
django-admin.py compilemessages -v 2 -l ru